// Stack.cpp: implementation of the CWWStack class.
//
//////////////////////////////////////////////////////////////////////

//===================================================================================================
//	Arquivo:			Stack.h
//...................................................................................................
//	Descrição:			realiza as tarefas de uma pilha.
//...................................................................................................
//	Autores:			Diogo Hideo Odan
//						Angelo Passaro
//						Nancy Mieko Abe
//===================================================================================================

#include <stdlib.h>
#include "levstack.h"


#define DEFAULT_STACK_SIZE  10

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

CWWStack::CWWStack()
{
	allocated = index = -1;
	array = new CWorld_Window[DEFAULT_STACK_SIZE];
	stack_Size = DEFAULT_STACK_SIZE;
}
CWWStack::CWWStack(int stacksize)
{
	allocated = index = -1;
	array = new CWorld_Window[stacksize];
	stacksize = DEFAULT_STACK_SIZE;
}


CWWStack::~CWWStack()
{
	if(array) {
		delete [] array;
		array = NULL;
	}
	index = allocated = -1;
}


//===============================================================================================================================
// Push
//===============================================================================================================================
// Autor:	Diogo Hideo Odan
// Data:    Dez/2002
// Projeto: Protótipo Explorador de Resultados
//===============================================================================================================================
// Descrição:	- armazena os limites da janela de visualização.
//===============================================================================================================================
// Parâmetros:
//				Entrada:
//						- worldwnd - limites da janela de visualização atual a ser armazenada.
//
//				Saida:
//						- nenhuma.
//===============================================================================================================================
void CWWStack::Push(CWorld_Window worldwnd)
{
	array[++index] = worldwnd;
	
	if(index > allocated)
		allocated = index;
}
//===============================================================================================================================
// Pop
//===============================================================================================================================
// Autor:	Diogo Hideo Odan
// Data:    Dez/2002
// Projeto: Protótipo Explorador de Resultados
//===============================================================================================================================
// Descrição:	- retorna o ultimo elemento da Pilha.
//===============================================================================================================================
// Parâmetros:
//				Entrada:
//						- nenhum.
//
//				Saida:
//						- retorna os limites anteriores da janela de visualização.
//===============================================================================================================================
CWorld_Window CWWStack::Pop()
{
	if (!index)
		throw;

	return array[--index];
}
//===============================================================================================================================
// IsEmpty
//===============================================================================================================================
// Autor:	Diogo Hideo Odan
// Data:    Dez/2002
// Projeto: Protótipo Explorador de Resultados
//===============================================================================================================================
// Descrição:	- Verifica a pilha está vazia.
//===============================================================================================================================
// Parâmetros:
//				Entrada:
//						- nenhum.
//
//				Saida:
//						- retorna os limites anteriores da janela de visualização.
//===============================================================================================================================
bool CWWStack::IsEmpty()
{
	bool ret = false;

	if(!index) ret = true;
	
	return ret;
}
//===============================================================================================================================
// Empty_Stack
//===============================================================================================================================
// Autor:	Diogo Hideo Odan
// Data:    Dez/2002
// Projeto: Protótipo Explorador de Resultados
//===============================================================================================================================
// Descrição:	- Esvazia logicamente a pilha, invalidando todas a informações, reiniciandos as variaveis de controle.
//===============================================================================================================================
// Parâmetros:
//				Entrada:
//						- nenhum.
//
//				Saida:
//						- nenhum.
//===============================================================================================================================
void CWWStack::Empty_Stack()
{
	allocated = index = -1;
}
